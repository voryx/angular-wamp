if("undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports){var autobahn=require("autobahn");module.exports="vxWamp"}!function(){"use strict";function b(){var a;this.init=function(b){a=b||{}};var b=this.interceptors=[];return this.$get=["$rootScope","$q","$log","$injector",function(c,d,e,f){function n(b){return a.disable_digest&&!0===a.disable_digest?b:function(){var a=b.apply(this,arguments);return c.$applyAsync(),a}}var g,h=d.defer(),i=h.promise,j=a.prefix||"$wamp",k=function(a,b,e){var f=d.defer();return c.$broadcast(j+".onchallenge",{promise:f,session:a,method:b,extra:e}),f.promise},l={onchallenge:n(k),use_deferred:d.defer};a=angular.extend(l,a);var m=[];angular.forEach(b,function(a){m.unshift(angular.isString(a)?f.get(a):f.invoke(a))}),g=new autobahn.Connection(a),g.onopen=n(function(a,b){e.debug("Congrats!  You're connected to the WAMP server!"),c.$broadcast(j+".open",{session:a,details:b}),h.resolve()}),g.onclose=n(function(a,b){e.debug("Connection Closed: ",a,b);for(var d in g.session._call_reqs)if(g.session._call_reqs.hasOwnProperty(d)){var f=new Error("Connection Closed"),h=g.session._call_reqs[d];h[0].reject(f)}c.$broadcast(j+".close",{reason:a,details:b})});var o=function(a,b,e,f){var i,k,h={},l=d.defer();return b=n(b),k=function(){var c=g.session.subscribe(a,b,e).then(function(a){return h.hasOwnProperty("id")&&delete h.id,h=angular.extend(a,h),l.resolve(h),a},function(a){l.reject(a)});f&&f(c)},g.isOpen&&k(),i=c.$on(j+".open",k),h.promise=l.promise,h.unsubscribe=function(){return i(),g.session.unsubscribe(h)},h.promise},p=function(a,b,c){var f=function(c){return{result:c,type:a,args:b}},g=function(c){return e.error(j+" error",{type:a,arguments:b,error:c}),d.reject({error:c,type:a,args:b})},h=i.then(function(){return c()}),k=[f,g];for(angular.forEach(m,function(b){(b[a+"Response"]||b[a+"ResponseError"])&&k.push(b[a+"Response"],b[a+"ResponseError"])}),k.push(function(a){return a.result},function(a){return d.reject(a.error)});k.length;){var l=k.shift(),n=k.shift();h=h.then(l,n)}return h};return{connection:g,open:function(){a.authmethods&&-1!==a.authmethods.indexOf("wampcra")&&!a.authid?e.debug("You're using WAMP CRA.  The authid must be set on $wamp before the connection can be opened, ie: $wamp.setAuthId('john.doe')"):g.open()},setOptions:function(b,c,d){c&&g.isOpen&&g.close(),angular.extend(a,b),d&&g.open()},setAuthId:function(b,c){a.authid=b,c&&g.open()},close:function(){g.close()},subscribe:function(a,b,c,d){return p("subscribe",arguments,function(){return o(a,b,c,d)})},subscribeOnScope:function(a,b,c){return this.subscribe(b,c).then(function(b){return a.$on("$destroy",function(){return b.unsubscribe()}),b})},unsubscribe:function(a){return p("unsubscribe",arguments,function(){return a.unsubscribe()})},publish:function(a,b,c,d){return p("publish",arguments,function(){return g.session.publish(a,b,c,d)})},register:function(a,b,c){return b=n(b),p("register",arguments,function(){return g.session.register(a,b,c)})},unregister:function(a){return p("unregister",arguments,function(){return a.unregister()})},call:function(a,b,c,d){return p("call",arguments,function(){return g.session.call(a,b,c,d)})}}}],this}angular.module("vxWamp",[]).provider("$wamp",b)}();
